# -*- coding: utf-8 -*-
"""Handwritten_recog.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1M3Tk78admD_zanLTwrR834Ey0HKXwE0j
"""

import tensorflow as tf
accuracy_required=90
class myCallback(tf.keras.callbacks.Callback):
  def on_epoch_end(self, epoch, logs={}):
    if(logs.get('accuracy')>accuracy_required/100):
      print("\nReached ",accuracy_required, "% accuracy so cancelling training!")
      self.model.stop_training = True

mnist = tf.keras.datasets.mnist

(x_train, y_train),(x_test, y_test) = mnist.load_data()
x_train, x_test = x_train / 255.0, x_test / 255.0

callbacks = myCallback()

model = tf.keras.models.Sequential([
  tf.keras.layers.Flatten(input_shape=(28, 28)),
  tf.keras.layers.Dense(4, activation=tf.nn.relu),
  tf.keras.layers.Dense(10, activation=tf.nn.softmax)
])
model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

model.fit(x_train, y_train, epochs=10, callbacks=[callbacks])


import numpy as np

model.evaluate(x_test, y_test)

classifications = model.predict(x_test)

"""# New Section"""

m=int(input("Type any index (0-9999 testable data in the library of mnist) u want the computer to recognize  --  "))
z=classifications[m]
k=np.array(z).tolist()
for i in range (0,len(k)):
  print("The probability of",i, "is --",k[i])
a=k.index(max(k))
print("Most probably it is : " ,a)


print("The correct answer(according to the actual library) is : " , y_test[m])

    
    
    


print("Did the computer recognise it?  ")
if (a==y_test[m]):
  print("YES, IT IS CORRECT")
else:
    print("NOPZ, IT IS WRONG. Try increasing the accuracy % for training")

print("This is the actual figure -- ")
import matplotlib.pyplot as plt
plt.imshow(x_test[m])